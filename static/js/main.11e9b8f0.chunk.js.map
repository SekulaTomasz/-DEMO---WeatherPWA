{"version":3,"sources":["assets/icons sync /^/.*/.svg$","assets/icons/01d.svg","assets/icons/01n.svg","assets/icons/02d.svg","assets/icons/02n.svg","assets/icons/03d.svg","assets/icons/03n.svg","assets/icons/04d.svg","assets/icons/04n.svg","assets/icons/09d.svg","assets/icons/09n.svg","assets/icons/10d.svg","assets/icons/10n.svg","assets/icons/11d.svg","assets/icons/11n.svg","assets/icons/13d.svg","assets/icons/13n.svg","assets/icons/50d.svg","assets/icons/50n.svg","assets/icons/iconfinder_Drip_5729390.svg","assets/icons/iconfinder_Foggy_Cloud_5729389.svg","assets/icons/iconfinder_Lightning_5729386.svg","assets/icons/iconfinder_Snow_Clody_5729380.svg","assets/icons/iconfinder_Snowing_5729381.svg","assets/icons/iconfinder_Windy_5729377.svg","component/Loader.js","context/LoaderContext.js","shared/Typography.js","shared/Language.js","shared/Colors.js","enums/LocalStorageType.js","context/CitiesContext.js","component/Header.js","component/Fab.js","utils/Debounce.js","utils/DateHelper.js","component/AutoCompleteInput.js","api/GeoDbApi.js","container/NewCityForm.js","component/Modal.js","component/Card/Card.js","component/Card/CardHeader.js","api/WeatherApi.js","component/Card/CardBody.js","container/CityWeatherDisplay.js","page/WeatherPage.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StyledLoaderContainer","styled","div","Loader","className","LoaderContext","createContext","LoaderProvider","children","useState","isLoaderVisible","toggleLoader","Provider","value","typography","language","appTitle","autocompletePlaceholder","modalTitle","cancel","add","errorMessages","cityExistInDb","weatherDescription","humidity","pressure","wind","sunrise","sunset","weekDaysShortName","monday","tuesday","wednesday","thursday","friday","saturday","sunday","colors","localStorageType","CitiesContext","CitiesProvider","result","window","localStorage","getItem","JSON","parse","cities","setCities","useEffect","setItem","stringify","addCityToDatabase","newRow","some","x","removeCityFromDatabase","cityName","filteredCities","filter","name","getCities","StyledHeaderContainer","StyledTitle","span","StyledIconContainer","Header","reloadComponent","Refresh","style","fontSize","color","cursor","onClick","StyledFabContainer","Fab","props","Add","debounce","func","wait","immediate","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","DateHelper","getDayNameFromDate","date","getDay","StyledInput","input","StyledAutoCompleteContainer","StyledHintContainer","StyledHintElementContainer","StyledMainHintElement","StyledAdditionalHintElement","AutoCompleteInput","onCityChange","inputActive","setInputActive","inputRef","useRef","length","onInputHandler","useCallback","axios","get","process","headers","then","fetchCities","data","city","country","geometry","latitude","longitude","ref","autoFocus","onChange","target","onInput","placeholder","key","selectedObject","StyledButtonContainer","NewCityForm","toggleModal","setSelectedCity","selectedCity","useContext","backgroundColor","ex","console","log","message","AddButtonClickHandler","StyledModalContainer","visible","StyledModalOverlay","css","StyledModalContent","StyledModalHeader","StyledModalBody","StyledModalTitle","Modal","modalVisible","setModalVisibility","prevState","margin","StyledCardContainer","Card","StyledMainHeaderRowContainer","StyledLeftHeaderColumn","StyledRightHeaderColumn","StyledRemoveButton","StyledCardTitle","StyledCardSubtitle","CardHeader","actions","title","subtitle","padding","baseUrl","getWeatherByGeoCoords","coordinates","StyledCardBodyRow","StyledCardBodyContainer","StyledCardBodyLeftColumn","StyledCardBodyRightColumn","StyledWeatherAttributeName","StyledTemperatureText","StyledDailyWeatherElement","StyledDailyWeatherContainer","fetchCityWeather","a","convertEpochTimestampToDate","timestamp","Date","setSeconds","CardBody","weather","setWeather","isLoading","setLoading","icon","current","temp","speed","wind_speed","deg","wind_deg","sys","daily","day","Math","round","night","dt","flex","src","require","width","paddingRight","toLocaleString","index","CityWeatherDisplay","citiesActions","WeatherPage","isModalVisible","lastUpdateDate","setLastUpdateDate","toggleModalEvent","StyledAppContainer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"kHAAA,IAAIA,EAAM,CACT,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,gCAAiC,GACjC,uCAAwC,GACxC,qCAAsC,GACtC,sCAAuC,GACvC,mCAAoC,GACpC,iCAAkC,IAInC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,wHC7CpBU,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,uVCI3C,IAAMC,EAAwBC,IAAOC,IAAV,KAqBZC,EATA,WACX,OACI,kBAACH,EAAD,KACI,yBAAKI,UAAU,YAAW,8BAAW,8BAAW,8BAAW,iCChB1DC,EAAgBC,wBAAc,IAE9BC,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEFC,oBAAS,GAFP,mBAEnCC,EAFmC,KAElBC,EAFkB,KAI1C,OACI,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAACF,iBAC1BD,GAAmB,kBAAC,EAAD,MACpBF,I,QCZAM,EAGH,OAHGA,EAIH,WAJGA,EAKH,SALGA,EAMI,OANJA,EAOI,WAPJA,EAQA,OCRAC,EACL,CACAC,SAAU,cACVC,wBAAyB,cACzBC,WAAY,oBACZC,OAAQ,SACRC,IAAK,QACLC,cAAe,CACXC,cAAe,mDAEnBC,mBAAoB,CAChBC,SAAU,yBACVC,SAAU,mBACVC,KAAM,UACNC,QAAS,+BACTC,OAAQ,gCAEZC,kBAAmB,CACfC,OAAQ,MACRC,QAAS,MACTC,UAAW,WACXC,SAAU,MACVC,OAAQ,MACRC,SAAU,MACVC,OAAQ,UCxBPC,EACA,UADAA,EAED,UCFCC,EACC,SCGDC,EAAgBjC,wBAAc,IAG9BkC,EAAiB,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,EAOhBC,oBALN,WAClB,IAAMgC,EAASC,OAAOC,aAAaC,QAAQN,GAC3C,OAAOG,EAASI,KAAKC,MAAML,GAAU,MAJG,mBAOrCM,EAPqC,KAO7BC,EAP6B,KAa5CC,qBAAU,WAHNP,OAAOC,aAAaO,QAAQZ,EAAyBO,KAAKM,UAAUJ,MAMtE,CAACA,IAgBH,OACI,kBAACR,EAAc3B,SAAf,CAAwBC,MAAO,CAACuC,kBAbV,SAACC,GACvB,GAAGN,EAAOO,MAAK,SAAAC,GAAC,OAAIA,IAAMF,KAAS,MAAM,IAAI5D,MAAMsB,EAAYM,cAAcC,eAC7E0B,EAAU,GAAD,mBAAKD,GAAL,CAAYM,MAW8BG,uBARxB,SAACC,GAC5B,IAAMC,EAAiBX,EAAOY,QAAO,SAAAJ,GAAC,OAAIA,EAAEK,OAASH,KACrDT,EAAUU,IAMiEG,UAH7D,kBAAMd,KAIfvC,I,whBCpCb,IAAMsD,EAAwB7D,IAAOC,IAAV,KASrB6D,EAAc9D,IAAO+D,KAAV,IACAlD,GAKXmD,EAAsBhE,IAAOC,IAAV,KAgBVgE,EATA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACb,OAAO,kBAACL,EAAD,KACH,kBAACC,EAAD,KAAchD,EAAYC,UAC1B,kBAACiD,EAAD,KACI,kBAACG,EAAA,EAAD,CAASC,MAAO,CAAEC,SAAU,OAAQC,MAAM,QAASC,OAAQ,WAAaC,QAAS,kBAAMN,U,mYC3BnG,IAAMO,EAAqBzE,IAAOC,IAAV,KAyBTyE,EATH,SAAEC,GAEV,OACI,kBAACF,EAAuBE,EACpB,kBAACC,EAAA,EAAD,CAAKR,MAAO,CAACC,SAAU,OAAQC,MAAO,aCXnCO,EAbE,SAACC,EAAMC,EAAMC,GAC1B,IAAIC,EACJ,OAAO,WACH,IAAIC,EAAUC,KAAMC,EAAOC,UAC3BC,aAAaL,GACbA,EAAUM,YAAW,WACjBN,EAAU,KACLD,GAAWF,EAAKU,MAAMN,EAASE,KACrCL,GACCC,IAAcC,GAASH,EAAKU,MAAMN,EAASE,KCexCK,EAtBI,CACfC,mBADe,SACIC,GAEf,OADkBA,EAAKC,UAEnB,KAAK,EACD,OAAO9E,EAAYc,kBAAkBO,OACzC,KAAK,EACD,OAAOrB,EAAYc,kBAAkBC,OACzC,KAAK,EACD,OAAOf,EAAYc,kBAAkBE,QACzC,KAAK,EACD,OAAOhB,EAAYc,kBAAkBG,UACzC,KAAK,EACD,OAAOjB,EAAYc,kBAAkBI,SACzC,KAAK,EACD,OAAOlB,EAAYc,kBAAkBK,OACzC,QACI,OAAOnB,EAAYc,kBAAkBM,Y,ipCCbrD,IAAM2D,EAAc7F,IAAO8F,MAAV,KAgBXC,EAA8B/F,IAAOC,IAAV,KAI3B+F,EAAsBhG,IAAOC,IAAV,KAWnBgG,EAA6BjG,IAAOC,IAAV,KAiB1BiG,GAAwBlG,IAAO+D,KAAV,IACVlD,GAGXsF,GAA8BnG,IAAO+D,KAAV,IAChBlD,GAwEFuF,GArEW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAczF,EAAY,EAAZA,MAAY,EAEbJ,oBAAS,GAFI,mBAE5C8F,EAF4C,KAE/BC,EAF+B,OAGvB/F,mBAAS,IAHc,mBAG5CsC,EAH4C,KAGpCC,EAHoC,KAK/CyD,EAAWC,iBAAO,MAEtBzD,qBAAU,WACN,OAAsB,IAAlBF,EAAO4D,OAAqBH,GAAe,GACxCA,GAAe,KACvB,CAACzD,IAEJ,IAsBM6D,EAAiBC,sBAAY/B,GAtBH,SAACjE,GAE7B,GAAI0F,EAAa,CACb,GAAI1F,EAAM8F,OAAS,EAAG,OACtB,OAAO3D,EAAU,ICzEL,IAACY,KD2ED/C,EC1EbiG,IAAMC,IAAN,UAJKC,kDAIL,uBAAmCpD,GAAO,CAAEqD,QAC/C,CACI,kBAAmB,4BACnB,iBANGD,yDD6EgBE,MAAK,YAAyB,IAC3CC,EAD0C,EAArBC,KAAQA,KACVnI,KAAI,SAACsE,GAC1B,MAAO,CACHK,KAAML,EAAE8D,KACRC,QAAS/D,EAAE+D,QACXlI,GAAImE,EAAEnE,GACNmI,SAAU,CACNC,SAAUjE,EAAEiE,SACZC,UAAWlE,EAAEkE,eAIzBzE,EAAUmE,QAImD,KAAO,IAO5E,OACI,oCACI,kBAACnB,EAAD,CAA6B5F,UAAU,0BACnC,kBAAC0F,EAAD,CAAa4B,IAAKjB,EACdkB,WAAS,EACT9G,MAAOA,EACP+G,SAAU,gBAAa/G,EAAb,EAAGgH,OAAUhH,MAAb,OAA2ByF,EAAazF,IAClDiH,QAAS,YAA4B,IAAfjH,EAAc,EAAxBgH,OAAUhH,MAClByF,EAAa,CAAC1C,KAAM/C,IACpB+F,EAAe/F,IAChBkH,YAAahH,EAAYE,0BAC/BsF,GACG,kBAACN,EAAD,KACKlD,EAAO9D,KAAI,SAACsE,GACT,OACI,kBAAC2C,EAAD,CAA4B8B,IAAKzE,EAAEnE,GAAIqF,QAAS,kBApB7CwD,EAoByE1E,EAnBpGP,EAAU,SACVsD,EAAa2B,GAFa,IAACA,IAqBC,kBAAC9B,GAAD,KAAwB5C,EAAEK,MAC1B,kBAACwC,GAAD,KAA8B7C,EAAE+D,iB,+XElHpE,IAAMY,GAAwBjI,IAAOC,IAAV,KAMNY,GA+CNqH,GApCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAElBnF,qBAAU,WACN,OAAO,WACHoF,EAAgB,CAACzE,KAAM,QAE5B,IANgC,MAQKnD,mBAAS,CAC7CmD,KAAM,KATyB,mBAQ5B0E,EAR4B,KAQdD,EARc,KAY5BjF,EAAqBmF,qBAAWhG,GAAhCa,kBAaP,OACI,6BACI,kBAAC,GAAD,CAAmBkD,aAAc+B,EAAiBxH,MAAOyH,EAAa1E,OACtE,kBAACsE,GAAD,KACI,4BAAQ7D,MAAO,CAACmE,gBAAgBnG,GAAgBoC,QAAS2D,GAAcrH,EAAYI,QACnF,4BAAQkD,MAAO,CAACmE,gBAAgBnG,GAAiBoC,QAAS,kBAhBxC,SAAC5D,GAC3B,IACIuC,EAAkBvC,GAClBuH,IAEJ,MAAMK,GACFC,QAAQC,IAAIF,EAAGG,UAUqDC,CAAsBP,KAAgBvH,EAAYK,Q,8uCChDlI,IAAM0H,GAAuB7I,IAAOC,IAAV,MAEX,qBAAE6I,QAAuB,GAAK,KAOvCC,GAAqB/I,IAAOC,IAAV,MAOlB,SAAA0E,GAAK,OAAIA,EAAMmE,SAAWE,YAAjB,SAKTC,GAAqBjJ,IAAOC,IAAV,MAQlB,SAAA0E,GAAK,OAAIA,EAAMmE,SAAWE,YAAjB,SAKTE,GAAoBlJ,IAAOC,IAAV,MAIjBkJ,GAAkBnJ,IAAOC,IAAV,MAIfmJ,GAAmBpJ,IAAOC,IAAV,KACLY,GA+BFwI,GA1BD,SAAC,GAA+B,IAA7B9I,EAA4B,EAA5BA,SAAU4H,EAAkB,EAAlBA,YAAkB,EAEE3H,oBAAS,GAFX,mBAElC8I,EAFkC,KAEpBC,EAFoB,KAYzC,OARAvG,qBAAU,WAKN,OAJAuC,YAAW,WACPgE,GAAmB,SAACC,GAAD,OAAgBA,OACpC,KAEI,kBAAMD,GAAmB,SAACC,GAAD,OAAgBA,QACjD,IAEK,kBAACX,GAAD,CAAsBC,QAASQ,GACnC,kBAACP,GAAD,CAAoBD,QAASQ,EAAc9E,QAAS2D,IACpD,kBAACc,GAAD,CAAoBH,QAASQ,GACzB,kBAACJ,GAAD,KACI,kBAACE,GAAD,KAAmBtI,EAAYG,aAEnC,wBAAImD,MAAO,CAACqF,OAAQ,UACpB,kBAACN,GAAD,KACK5I,M,kLCrEjB,IAAMmJ,GAAsB1J,IAAOC,IAAV,MAeV0J,GARF,SAAC,GAAgB,IAAfpJ,EAAc,EAAdA,SACX,OACI,kBAACmJ,GAAD,KACKnJ,I,2yBCTb,IAAMqJ,GAA+B5J,IAAOC,IAAV,MAK5B4J,GAAyB7J,IAAOC,IAAV,MAMtB6J,GAA0B9J,IAAOC,IAAV,MAKvB8J,GAAqB/J,IAAOC,IAAV,MAQlB+J,GAAkBhK,IAAO+D,KAAV,KACJlD,GAGXoJ,GAAqBjK,IAAO+D,KAAV,KACPlD,GAoBFqJ,GAhBI,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAA2B,IAApBC,gBAAoB,MAAT,GAAS,EACtD,OACI,kBAACT,GAAD,KACI,kBAACC,GAAD,KACI,kBAACG,GAAD,KAAkBI,GAClB,kBAACH,GAAD,KAAqBI,IAEzB,kBAACP,GAAD,KACI,kBAACC,GAAD,CAAoBvF,QAAS,kBAAM2F,EAAQ5G,uBAAuB6G,KAC9D,kBAAC,KAAD,CAAWhG,MAAO,CAACkG,QAAS,gB,6BC7C1CC,GAAUxD,kDAUVyD,GAAwB,SAACC,GAC3B,OAAO5D,IAAMC,IAAN,UAAayD,GAAb,gBAA4BE,EAAYlD,SAAxC,gBAAwDkD,EAAYjD,UAApE,0CAVIT,mCAUJ,mB,s/BCPX,IAAM2D,GAAoB1K,IAAOC,IAAV,MAKjB0K,GAA0B3K,IAAOC,IAAV,MAKvB2K,GAA2B5K,IAAOC,IAAV,MAOxB4K,GAA4B7K,IAAOC,IAAV,MAKzB6K,GAA6B9K,IAAO+D,KAAV,MAI1BgH,GAAwB/K,IAAO+D,KAAV,KACVlD,GAGXmK,GAA4BhL,IAAOC,IAAV,MAOzBgL,GAA8BjL,IAAOC,IAAV,MAM3BiL,GAAgB,yCAAG,WAAOT,GAAP,UAAAU,EAAA,sEACRX,GAAsBC,GADd,mFAAH,sDAIhBW,GAA8B,SAACC,GAAD,OAAe,IAAIC,KAAK,IAAIA,KAAK,GAAGC,WAAWF,KAkGpEG,GA9FE,SAAC,GAAc,IAEpBlE,EAFmB,EAAXF,KAERE,SAFmB,EAIG9G,mBAAS,MAJZ,mBAIpBiL,EAJoB,KAIXC,EAJW,OAKKlL,oBAAS,GALd,mBAKpBmL,EALoB,KAKTC,EALS,KA0C3B,OAnCA5I,qBAAU,WACNkI,GAAiB5D,GAAUL,MAAK,YAAe,IAAZE,EAAW,EAAXA,KAC/BuE,EAAW,CACPG,KAAM1E,EAAK2E,QAAQL,QAAQ,GAAGI,KAC9BE,KAAM5E,EAAK2E,QAAQC,KACnBxK,SAAU4F,EAAK2E,QAAQvK,SACvBC,SAAU2F,EAAK2E,QAAQtK,SACvBC,KAAM,CACFuK,MAAO7E,EAAK2E,QAAQG,WACpBC,IAAK/E,EAAK2E,QAAQK,UAEtBC,IAAK,CACD1K,QAASyF,EAAK2E,QAAQpK,QACtBC,OAAQwF,EAAK2E,QAAQnK,QAEzB0K,MAAOlF,EAAKkF,MAAMrN,KAAI,SAACsE,GACnB,MAAO,CACHuI,KAAMvI,EAAEmI,QAAQ,GAAGI,KACnBE,KAAM,CACFO,IAAKC,KAAKC,MAAMlJ,EAAEyI,KAAKO,KACvBG,MAAOF,KAAKC,MAAMlJ,EAAEyI,KAAKU,QAE7BC,GAAIpJ,EAAEoJ,cAMvB,IAGH1J,qBAAU,WACFyI,GAASG,GAAW,KACzB,CAACH,IAEAE,EAAkB,qCAGlB,kBAACjB,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,KACI,yBAAKxG,MAAO,CACRuI,KAAM,SACP,yBAAKC,IAAKC,MAAQ,YAAsBpB,EAAQI,KAA/B,SAA4CzH,MAAO,CAAE0I,MAAO,WAChF,yBAAK1I,MAAO,CACRuI,KAAM,EACNI,aAAc,SACf,kBAAChC,GAAD,eAA2BU,EAAQM,KAAnC,YAIP,kBAAClB,GAAD,KACI,2BACI,kBAACC,GAAD,KAA6BhK,EAAYQ,mBAAmBC,UADhE,UAEQkK,EAAQlK,SAFhB,MAIA,2BACI,kBAACuJ,GAAD,KAA6BhK,EAAYQ,mBAAmBE,UAC3DiK,EAAQjK,UAEb,2BACI,kBAACsJ,GAAD,KAA6BhK,EAAYQ,mBAAmBG,MADhE,UAEQgK,EAAQhK,KAAKuK,MAFrB,gBAEkCP,EAAQhK,KAAKyK,IAF/C,SAIA,2BACI,kBAACpB,GAAD,KAA6BhK,EAAYQ,mBAAmBI,SAC3D0J,GAA4BK,EAAQW,IAAI1K,SAASsL,kBAEtD,2BACI,kBAAClC,GAAD,KAA6BhK,EAAYQ,mBAAmBK,QAC3DyJ,GAA4BK,EAAQW,IAAIzK,QAAQqL,oBAK7D,kBAAC/B,GAAD,KACKQ,EAAQY,MAAMrN,KAAI,SAACsE,EAAG2J,GAAJ,OACnB,kBAACjC,GAAD,CAA2BjD,IAAKkF,GAC5B,yCAvFQtH,EAuFqByF,GAA4B9H,EAAEoJ,IAvF1CjH,EAAWC,mBAAmBC,MAwF/C,yBAAKiH,IAAKC,MAAQ,YAAsBvJ,EAAEuI,KAAzB,SAAsCzH,MAAO,CAAE0I,MAAO,UAC3E,wCAAUxJ,EAAEyI,KAAKO,IAAjB,iBAA0BhJ,EAAEyI,KAAKU,MAAjC,UAzFW,IAAC9G,QCnCbuH,GAfY,SAAC,GAA2B,IAA1B9F,EAAyB,EAAzBA,KAGlB7D,EAH2C,EAAnB4J,cAGxB5J,uBAEAI,EAAiByD,EAAjBzD,KAAM0D,EAAWD,EAAXC,QAEb,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAY+C,MAAOzG,EAAM0G,SAAUhD,EAAS8C,QAAS,CAAC5G,4BACtD,kBAAC,GAAD,CAAU6D,KAAMA,MCmBbgG,GAzBK,WAAO,IAAD,EAEgB5M,oBAAS,GAFzB,mBAEf6M,EAFe,KAEClF,EAFD,OAGsB3H,mBAAS,IAAI8K,MAHnC,mBAGfgC,EAHe,KAGCC,EAHD,OAKqBjF,qBAAWhG,GAA/CsB,EALe,EAKfA,UAAUL,EALK,EAKLA,uBAEXiK,EAAmB,kBAAOrF,GAAY,SAACqB,GAAD,OAAgBA,MAG5D,OAAQ,yBAAKzB,IAAKuF,GACbD,GACG,kBAAC,GAAD,CAAOlF,YAAaqF,GAChB,kBAAC,GAAD,CAAarF,YAAaqF,KAGlC,kBAAC,EAAD,CAAQtJ,gBARc,kBAAMqJ,EAAkB,IAAIjC,SASjD1H,IAAY5E,KAAI,SAACoI,GACd,OAAO,kBAAC,GAAD,CAAoBA,KAAMA,EAChCW,IAAKX,EAAKjI,GAAIgO,cAAe,CAAC5J,+BAEnC,kBAAC,EAAD,CAAKiB,QAAS,kBAAM2D,GAAY,SAACqB,GAAD,OAAgBA,U,6HCxBxD,IAAMiE,GAAqBzN,IAAOC,IAAV,MAmBTyN,OAZf,WACE,OACE,kBAACD,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,UCNUE,QACW,cAA7BlL,OAAOmL,SAASC,UAEe,UAA7BpL,OAAOmL,SAASC,UAEhBpL,OAAOmL,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrH,MAAK,SAAAsH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjG,QAAQiG,MAAMA,EAAM/F,e","file":"static/js/main.11e9b8f0.chunk.js","sourcesContent":["var map = {\n\t\"./01d.svg\": 68,\n\t\"./01n.svg\": 69,\n\t\"./02d.svg\": 70,\n\t\"./02n.svg\": 71,\n\t\"./03d.svg\": 72,\n\t\"./03n.svg\": 73,\n\t\"./04d.svg\": 74,\n\t\"./04n.svg\": 75,\n\t\"./09d.svg\": 76,\n\t\"./09n.svg\": 77,\n\t\"./10d.svg\": 78,\n\t\"./10n.svg\": 79,\n\t\"./11d.svg\": 80,\n\t\"./11n.svg\": 81,\n\t\"./13d.svg\": 82,\n\t\"./13n.svg\": 83,\n\t\"./50d.svg\": 84,\n\t\"./50n.svg\": 85,\n\t\"./iconfinder_Drip_5729390.svg\": 86,\n\t\"./iconfinder_Foggy_Cloud_5729389.svg\": 87,\n\t\"./iconfinder_Lightning_5729386.svg\": 88,\n\t\"./iconfinder_Snow_Clody_5729380.svg\": 89,\n\t\"./iconfinder_Snowing_5729381.svg\": 90,\n\t\"./iconfinder_Windy_5729377.svg\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/01d.18ae8b6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/01n.abd97416.svg\";","module.exports = __webpack_public_path__ + \"static/media/02d.51461db4.svg\";","module.exports = __webpack_public_path__ + \"static/media/02n.33e7fec5.svg\";","module.exports = __webpack_public_path__ + \"static/media/03d.6dfb3b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/03n.6dfb3b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/04d.6dfb3b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/04n.6dfb3b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/09d.2cf3bb1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/09n.2cf3bb1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.3373d822.svg\";","module.exports = __webpack_public_path__ + \"static/media/10n.c13e538e.svg\";","module.exports = __webpack_public_path__ + \"static/media/11d.a922c3fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/11n.a922c3fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/13d.74f45bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/13n.74f45bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/50d.57afbca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/50n.57afbca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Drip_5729390.01e4b4f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Foggy_Cloud_5729389.7125fd31.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Lightning_5729386.d88b95fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Snow_Clody_5729380.2be9bd0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Snowing_5729381.85b6d51b.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconfinder_Windy_5729377.e977faa6.svg\";","import React from 'react';\r\nimport '../style/loader.css';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <StyledLoaderContainer>\r\n            <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n        </StyledLoaderContainer>\r\n    );\r\n}\r\n\r\n\r\nexport default Loader;","import React, {createContext, useState} from 'react';\r\nimport Loader from '../component/Loader';\r\n\r\nexport const LoaderContext = createContext({});\r\n\r\nexport const LoaderProvider = ({children}) => {\r\n\r\n    const [isLoaderVisible, toggleLoader] = useState(false);\r\n\r\n    return (\r\n        <LoaderContext.Provider value={{toggleLoader}}>\r\n            { isLoaderVisible && <Loader />}\r\n            {children}\r\n        </LoaderContext.Provider>\r\n    )\r\n}","export const typography = {\r\n    'H1': '96px',\r\n    'H2': '3.75rem',\r\n    'H3': '3rem',\r\n    'H4': '2.125rem',\r\n    'H5': '1.5rem',\r\n    'subtitle1': '1rem',\r\n    'subtitle2': '0.875rem',\r\n    'body1': '1rem',\r\n    'body2': '0.875rem'\r\n}","export const language = {\r\n    pl: {\r\n        appTitle: \"Weather APP\",\r\n        autocompletePlaceholder: \"Wyszukaj...\",\r\n        modalTitle: \"Dodaj nowe miasto\",\r\n        cancel: \"Anuluj\",\r\n        add: \"Dodaj\",\r\n        errorMessages: {\r\n            cityExistInDb: 'Wybrane miasto istnieje już w bazie danych'\r\n        },\r\n        weatherDescription: {\r\n            humidity: \"Wilgotność: \",\r\n            pressure: \"Ciśnienie: \",\r\n            wind: \"Wiatr: \",\r\n            sunrise: \"Wschód słońca: \",\r\n            sunset: \"Zachód słońca: \"\r\n        },\r\n        weekDaysShortName: {\r\n            monday: \"Pon\",\r\n            tuesday: \"Wto\",\r\n            wednesday: \"Śro\",\r\n            thursday: \"Czw\",\r\n            friday: \"Pio\",\r\n            saturday: \"Sob\",\r\n            sunday: \"Niedz\"\r\n        }\r\n    }\r\n}\r\n","export const colors = {\r\n    success: \"#218838\",\r\n    danger: \"#dc3545\"\r\n}","export const localStorageType = {\r\n    \"cities\": \"CITIES\"\r\n}","import React, { createContext, useEffect, useState } from 'react';\r\nimport { language } from '../shared/index';\r\nimport { localStorageType } from '../enums/index';\r\n\r\nexport const CitiesContext = createContext({});\r\n\r\n\r\nexport const CitiesProvider = ({ children }) => {\r\n\r\n    const getIntialData = () => {\r\n        const result = window.localStorage.getItem(localStorageType.cities);\r\n        return result ? JSON.parse(result) : []  \r\n    }\r\n\r\n    const [cities, setCities] = useState(getIntialData);\r\n\r\n    const updateLocalStorage = () => {\r\n        window.localStorage.setItem(localStorageType.cities, JSON.stringify(cities));\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateLocalStorage();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[cities])\r\n\r\n    \r\n\r\n    const addCityToDatabase = (newRow) => {\r\n        if(cities.some(x => x === newRow)) throw new Error(language.pl.errorMessages.cityExistInDb)\r\n        setCities([...cities,newRow])\r\n    }\r\n\r\n    const removeCityFromDatabase = (cityName) => {\r\n        const filteredCities = cities.filter(x => x.name !== cityName);\r\n        setCities(filteredCities);\r\n    }\r\n\r\n    const getCities = () => cities;\r\n\r\n    return (\r\n        <CitiesContext.Provider value={{addCityToDatabase, removeCityFromDatabase, getCities}}>\r\n            {children}\r\n        </CitiesContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Refresh} from '@material-ui/icons';\r\nimport {typography, language} from '../shared/index';\r\n\r\nconst StyledHeaderContainer = styled.div`\r\n    width: 100%;\r\n    min-height: 3.5rem;\r\n    background-color: #457b9d;\r\n    position: sticky;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst StyledTitle = styled.span`\r\n    font-size: ${typography.H3};\r\n    color: #f1faee;\r\n    padding: 0.5rem;\r\n`\r\n\r\nconst StyledIconContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n`\r\n\r\nconst Header = ({reloadComponent}) => {\r\n    return <StyledHeaderContainer>\r\n        <StyledTitle>{language.pl.appTitle}</StyledTitle>\r\n        <StyledIconContainer>\r\n            <Refresh style={{ fontSize: '3rem', color:\"white\", cursor: 'pointer' }} onClick={() => reloadComponent()}/>\r\n        </StyledIconContainer>\r\n    </StyledHeaderContainer>\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Add} from '@material-ui/icons';\r\n\r\nconst StyledFabContainer = styled.div`\r\n    position: fixed;\r\n    background-color: #457b9d;\r\n    bottom: 0;\r\n    right: 0;\r\n    margin: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;   \r\n    border-radius: 50%; \r\n    width: 3rem;\r\n    height: 3rem;\r\n    cursor: pointer;\r\n    box-shadow: 1px 1px 1px 1px #ccc;\r\n`\r\n\r\nconst Fab = ( props) => {\r\n\r\n    return(\r\n        <StyledFabContainer {...props}>\r\n            <Add style={{fontSize: '2rem', color: \"white\"}}/>\r\n        </StyledFabContainer>\r\n    )\r\n}\r\n\r\nexport default Fab;","const debounce = (func, wait, immediate) => {\r\n    var timeout;\r\n    return function() {\r\n        var context = this, args = arguments;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        }, wait);\r\n        if (immediate && !timeout) func.apply(context, args);\r\n    };\r\n}\r\n\r\nexport default debounce;","import { language } from '../shared/index';\r\n\r\nconst DateHelper = {\r\n    getDayNameFromDate(date) {\r\n        const dayNumber = date.getDay();\r\n        switch(dayNumber){\r\n            case 0: \r\n                return language.pl.weekDaysShortName.sunday;\r\n            case 1: \r\n                return language.pl.weekDaysShortName.monday;\r\n            case 2:\r\n                return language.pl.weekDaysShortName.tuesday;\r\n            case 3: \r\n                return language.pl.weekDaysShortName.wednesday;\r\n            case 4: \r\n                return language.pl.weekDaysShortName.thursday;\r\n            case 5:\r\n                return language.pl.weekDaysShortName.friday;\r\n            default:\r\n                return language.pl.weekDaysShortName.saturday;\r\n        }\r\n    }\r\n}\r\n\r\nexport default DateHelper;","import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { language,typography } from '../shared/index';\r\nimport { debounce } from '../utils/index';\r\nimport { getCitiesByName } from '../api/GeoDbApi';\r\n\r\nconst StyledInput = styled.input`\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    border: 0px;\r\n    min-height: 40px;\r\n    user-select: none;\r\n    outline: none;\r\n    text-indent: 10px;\r\n\r\n    &:hover {\r\n        outline: none;\r\n    }\r\n    &:active {\r\n        outline: none;\r\n    }\r\n`\r\nconst StyledAutoCompleteContainer = styled.div`\r\n    position:relative;\r\n`\r\n\r\nconst StyledHintContainer = styled.div`\r\n    background-color:white;\r\n    position: absolute;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    border: 1px solid #ccc;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n`\r\n\r\nconst StyledHintElementContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    color: black;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n\r\n    &:hover {\r\n        color: white;\r\n        background-color: #457b9d;\r\n    }\r\n\r\n    \r\n`\r\n\r\nconst StyledMainHintElement = styled.span`\r\n    font-size: ${typography.subtitle1}\r\n`\r\n\r\nconst StyledAdditionalHintElement = styled.span`\r\n    font-size: ${typography.subtitle2}\r\n`\r\n\r\nconst AutoCompleteInput = ({ onCityChange, value }) => {\r\n\r\n    const [inputActive, setInputActive] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    let inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (cities.length === 0) return setInputActive(false);\r\n        return setInputActive(true);\r\n    }, [cities])\r\n\r\n    const onInputHandlerDebounced = (value) => {\r\n\r\n        if (inputActive) {\r\n            if (value.length > 0) return;\r\n            return setCities([]);\r\n        }\r\n        getCitiesByName(value).then(({ data: { data } }) => {\r\n            const fetchCities = data.map((x) => {\r\n                return {\r\n                    name: x.city,\r\n                    country: x.country,\r\n                    id: x.id,\r\n                    geometry: {\r\n                        latitude: x.latitude,\r\n                        longitude: x.longitude\r\n                    }\r\n                }\r\n            });\r\n            setCities(fetchCities);\r\n        });\r\n    }\r\n\r\n    const onInputHandler = useCallback(debounce(onInputHandlerDebounced, 1000), []);\r\n\r\n    const onHintSelectedHandler = (selectedObject) => {\r\n        setCities([]);\r\n        onCityChange(selectedObject);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledAutoCompleteContainer className=\"form-element-container\">\r\n                <StyledInput ref={inputRef}\r\n                    autoFocus\r\n                    value={value}\r\n                    onChange={({ target: { value } }) => onCityChange(value)}\r\n                    onInput={({ target: { value } }) => {\r\n                        onCityChange({name: value});\r\n                        onInputHandler(value)\r\n                    }} placeholder={language.pl.autocompletePlaceholder}></StyledInput>\r\n                {inputActive &&\r\n                    <StyledHintContainer>\r\n                        {cities.map((x) => {\r\n                            return (\r\n                                <StyledHintElementContainer key={x.id} onClick={() => onHintSelectedHandler(x)}>\r\n                                    <StyledMainHintElement>{x.name}</StyledMainHintElement>\r\n                                    <StyledAdditionalHintElement>{x.country}</StyledAdditionalHintElement>\r\n                                </StyledHintElementContainer>\r\n                            )\r\n                        })}\r\n                    </StyledHintContainer>\r\n                }\r\n            </StyledAutoCompleteContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteInput;","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.REACT_APP_GEODB_BASE_URL;\r\nconst apiKey = process.env.REACT_APP_GEODB_API_KEY;\r\n\r\nconst getCitiesByName = (name) => {\r\n    return axios.get(`${baseUrl}?namePrefix=${name}`,{ headers: \r\n        { \r\n            'x-rapidapi-host': 'wft-geo-db.p.rapidapi.com', \r\n            'x-rapidapi-key': apiKey\r\n        } \r\n    })\r\n}\r\n\r\n\r\nexport {\r\n    getCitiesByName\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport AutoCompleteInput from '../component/AutoCompleteInput';\r\nimport styled from 'styled-components';\r\nimport {typography, colors, language} from '../shared/index'\r\nimport { CitiesContext } from '../context/CitiesContext';\r\n\r\nconst StyledButtonContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 1rem;\r\n\r\n    > button {\r\n        font-size: ${typography.body1};\r\n        margin-left: 1rem;\r\n        min-height: 2rem;\r\n        margin-left: 1rem;\r\n        border: unset;\r\n        border-radius: 5px;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst NewCityForm = ({toggleModal}) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setSelectedCity({name: ''});\r\n        }\r\n    }, [])\r\n\r\n    const [selectedCity, setSelectedCity] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const {addCityToDatabase} = useContext(CitiesContext);\r\n\r\n    const AddButtonClickHandler = (value) => {\r\n        try{\r\n            addCityToDatabase(value);\r\n            toggleModal();\r\n        }\r\n        catch(ex){\r\n            console.log(ex.message);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <AutoCompleteInput onCityChange={setSelectedCity} value={selectedCity.name}/>\r\n            <StyledButtonContainer>\r\n                <button style={{backgroundColor:colors.danger}} onClick={toggleModal}>{language.pl.cancel}</button>\r\n                <button style={{backgroundColor:colors.success}} onClick={() => AddButtonClickHandler(selectedCity)}>{language.pl.add}</button>\r\n            </StyledButtonContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCityForm;","import React, { useState, useEffect } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport {typography} from '../shared/index';\r\nimport {language} from '../shared/index';\r\n\r\nconst StyledModalContainer = styled.div`\r\n    position:absolute;\r\n    z-index: ${({visible}) => visible ? 1 : -1};\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nconst StyledModalOverlay = styled.div`\r\n    position:absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: grey;\r\n    opacity: 0;\r\n    transition: opacity .3s ease-out;\r\n    ${props => props.visible && css`\r\n        opacity: 0.8;\r\n    `}\r\n    \r\n`\r\nconst StyledModalContent = styled.div`\r\n    z-index: 2;\r\n    min-width: 40%;\r\n    background-color: #f0efeb;\r\n    border-radius: 1rem;\r\n    position:relative;\r\n    top: -600px;\r\n    transition: all .3s ease-out;\r\n    ${props => props.visible && css`\r\n         top: 0px;\r\n    `}\r\n`\r\n\r\nconst StyledModalHeader = styled.div`\r\n    display:flex;\r\n    align-items: center\r\n`\r\nconst StyledModalBody = styled.div`\r\n    padding: 1rem;\r\n`\r\n\r\nconst StyledModalTitle = styled.div`\r\n    font-size: ${typography.H4};\r\n    padding: 1rem;\r\n    font-weight: 600;\r\n`\r\n\r\nconst Modal = ({ children, toggleModal }) => {\r\n\r\n    const [modalVisible, setModalVisibility] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setModalVisibility((prevState) => !prevState);\r\n        }, 300);\r\n\r\n        return () => setModalVisibility((prevState) => !prevState);\r\n    }, [])\r\n\r\n    return (<StyledModalContainer visible={modalVisible}>\r\n        <StyledModalOverlay visible={modalVisible} onClick={toggleModal}/>\r\n        <StyledModalContent visible={modalVisible}>\r\n            <StyledModalHeader>\r\n                <StyledModalTitle>{language.pl.modalTitle}</StyledModalTitle>\r\n            </StyledModalHeader>\r\n            <hr style={{margin: '10px'}}/>\r\n            <StyledModalBody>\r\n                {children}\r\n            </StyledModalBody>\r\n        </StyledModalContent>\r\n    </StyledModalContainer>);\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst StyledCardContainer = styled.div`\r\n    margin: 1rem;\r\n    box-shadow: 1px 1px 2px 2px #ccc;\r\n    padding: 1rem;\r\n    border-radius: 0.5rem\r\n`\r\n\r\nconst Card = ({children}) => {\r\n    return(\r\n        <StyledCardContainer>\r\n            {children}\r\n        </StyledCardContainer>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { typography } from '../../shared/index';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst StyledMainHeaderRowContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nconst StyledLeftHeaderColumn = styled.div`\r\n    flex: auto;\r\n    display: flex;\r\n    flex-direction: column; \r\n`\r\n\r\nconst StyledRightHeaderColumn = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`\r\n\r\nconst StyledRemoveButton = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    user-select: none;\r\n`\r\n\r\nconst StyledCardTitle = styled.span`\r\n    font-size: ${typography.H5};\r\n`\r\n\r\nconst StyledCardSubtitle = styled.span`\r\n    font-size: ${typography.subtitle1}\r\n    font-style: italic;\r\n`\r\n\r\nconst CardHeader = ({ actions, title, subtitle = \"\" }) => {\r\n    return (\r\n        <StyledMainHeaderRowContainer>\r\n            <StyledLeftHeaderColumn>\r\n                <StyledCardTitle>{title}</StyledCardTitle>\r\n                <StyledCardSubtitle>{subtitle}</StyledCardSubtitle>\r\n            </StyledLeftHeaderColumn>\r\n            <StyledRightHeaderColumn>\r\n                <StyledRemoveButton onClick={() => actions.removeCityFromDatabase(title)}>\r\n                    <ClearIcon style={{padding: '0.5rem'}}/>\r\n                </StyledRemoveButton>\r\n            </StyledRightHeaderColumn>\r\n        </StyledMainHeaderRowContainer>\r\n    )\r\n}\r\n\r\nexport default CardHeader;","import axios from 'axios'\r\n\r\nconst baseUrl = process.env.REACT_APP_WEATHER_BASE_URL;\r\nconst apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nconst getWeatherByCityName = (name) => {\r\n    return axios.get(`${baseUrl}?q=${name}&appid=${apiKey}&cnt=8&units=metric`)\r\n}\r\n\r\nconst getWeatherByCityId = (id) => {\r\n    return axios.get(`${baseUrl}?id=${id}&appid=${apiKey}}&cnt=8&units=metric`)\r\n}\r\nconst getWeatherByGeoCoords = (coordinates) => {\r\n    return axios.get(`${baseUrl}?lat=${coordinates.latitude}&lon=${coordinates.longitude}&exclude=hourly,minutely&appid=${apiKey}&units=metric`)\r\n}\r\n\r\nexport {\r\n    getWeatherByCityName,\r\n    getWeatherByCityId,\r\n    getWeatherByGeoCoords\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getWeatherByGeoCoords } from '../../api/WeatherApi';\r\nimport { DateHelper } from '../../utils/index';\r\nimport { language, typography } from '../../shared/index';\r\n\r\nconst StyledCardBodyRow = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledCardBodyContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\n\r\nconst StyledCardBodyLeftColumn = styled.div`\r\n    flex: 3;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n`\r\n\r\nconst StyledCardBodyRightColumn = styled.div`\r\n    flex: 2;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst StyledWeatherAttributeName = styled.span`\r\n    font-weight: 600;\r\n`\r\n\r\nconst StyledTemperatureText = styled.span`\r\n    font-size: ${typography.H4}\r\n`\r\n\r\nconst StyledDailyWeatherElement = styled.div`\r\n    flex: 1;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst StyledDailyWeatherContainer = styled.div`\r\n    display: flex;\r\n    justify-content: row;\r\n`\r\n\r\n\r\nconst fetchCityWeather = async (coordinates) => {\r\n    return await getWeatherByGeoCoords(coordinates);\r\n}\r\n\r\nconst convertEpochTimestampToDate = (timestamp) => new Date(new Date(0).setSeconds(timestamp))\r\n\r\nconst getDayNameFromDate = (date) => DateHelper.getDayNameFromDate(date);\r\n\r\nconst CardBody = ({ city }) => {\r\n\r\n    const { geometry } = city;\r\n\r\n    const [weather, setWeather] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchCityWeather(geometry).then(({ data }) => {\r\n            setWeather({\r\n                icon: data.current.weather[0].icon,\r\n                temp: data.current.temp,\r\n                humidity: data.current.humidity,\r\n                pressure: data.current.pressure,\r\n                wind: {\r\n                    speed: data.current.wind_speed,\r\n                    deg: data.current.wind_deg\r\n                },\r\n                sys: {\r\n                    sunrise: data.current.sunrise,\r\n                    sunset: data.current.sunset\r\n                },\r\n                daily: data.daily.map((x) => {\r\n                    return {\r\n                        icon: x.weather[0].icon,\r\n                        temp: {\r\n                            day: Math.round(x.temp.day),\r\n                            night: Math.round(x.temp.night)\r\n                        },\r\n                        dt: x.dt\r\n                    }\r\n                })\r\n            })\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (weather) setLoading(false);\r\n    }, [weather])\r\n\r\n    if (isLoading) return <></>\r\n\r\n    return (\r\n        <StyledCardBodyRow>\r\n            <StyledCardBodyContainer>\r\n                <StyledCardBodyLeftColumn>\r\n                    <div style={{\r\n                        flex: \"auto\"\r\n                    }}><img src={require(`../../assets/icons/${weather.icon}.svg`)} style={{ width: '100%' }} /></div>\r\n                    <div style={{\r\n                        flex: 1,\r\n                        paddingRight: '1rem'\r\n                    }}><StyledTemperatureText>{`${weather.temp}°C`}</StyledTemperatureText></div>\r\n\r\n\r\n                </StyledCardBodyLeftColumn>\r\n                <StyledCardBodyRightColumn>\r\n                    <p>\r\n                        <StyledWeatherAttributeName>{language.pl.weatherDescription.humidity}</StyledWeatherAttributeName>\r\n                        {`${weather.humidity}%`}\r\n                    </p>\r\n                    <p>\r\n                        <StyledWeatherAttributeName>{language.pl.weatherDescription.pressure}</StyledWeatherAttributeName>\r\n                        {weather.pressure}\r\n                    </p>\r\n                    <p>\r\n                        <StyledWeatherAttributeName>{language.pl.weatherDescription.wind}</StyledWeatherAttributeName>\r\n                        {`${weather.wind.speed}km/h ${weather.wind.deg}°`}\r\n                    </p>\r\n                    <p>\r\n                        <StyledWeatherAttributeName>{language.pl.weatherDescription.sunrise}</StyledWeatherAttributeName>\r\n                        {convertEpochTimestampToDate(weather.sys.sunrise).toLocaleString()}\r\n                    </p>\r\n                    <p>\r\n                        <StyledWeatherAttributeName>{language.pl.weatherDescription.sunset}</StyledWeatherAttributeName>\r\n                        {convertEpochTimestampToDate(weather.sys.sunset).toLocaleString()}\r\n                    </p>\r\n                </StyledCardBodyRightColumn>\r\n\r\n            </StyledCardBodyContainer>\r\n            <StyledDailyWeatherContainer>\r\n                {weather.daily.map((x, index) => \r\n                <StyledDailyWeatherElement key={index}>\r\n                    <span>{`${getDayNameFromDate(convertEpochTimestampToDate(x.dt))}`}</span>\r\n                    <img src={require(`../../assets/icons/${x.icon}.svg`)} style={{ width: '100%' }} />\r\n                <span>{`${x.temp.day}°  ${x.temp.night}°`}</span>\r\n                </StyledDailyWeatherElement>)}\r\n            </StyledDailyWeatherContainer>\r\n        </StyledCardBodyRow>\r\n    )\r\n}\r\n\r\nexport default CardBody;","import React from 'react';\r\nimport Card from '../component/Card/Card';\r\nimport CardHeader from '../component/Card/CardHeader'\r\nimport CardBody from '../component/Card/CardBody';\r\n\r\nconst CityWeatherDisplay = ({city, citiesActions}) => {\r\n\r\n\r\n    const {removeCityFromDatabase} = citiesActions;\r\n\r\n    const {name, country} = city;\r\n\r\n    return(\r\n        <Card>\r\n            <CardHeader title={name} subtitle={country} actions={{removeCityFromDatabase}}/>\r\n            <CardBody city={city}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CityWeatherDisplay;","import React, { useContext, useState } from 'react';\r\nimport Header from '../component/Header';\r\nimport Fab from '../component/Fab';\r\nimport NewCityForm from '../container/NewCityForm';\r\nimport Modal from '../component/Modal';\r\nimport { CitiesContext } from '../context/CitiesContext';\r\nimport CityWeatherDisplay from '../container/CityWeatherDisplay';\r\n\r\n\r\nconst WeatherPage = () => {\r\n\r\n    const [isModalVisible, toggleModal] = useState(false);\r\n    const [lastUpdateDate, setLastUpdateDate] = useState(new Date());\r\n\r\n    const {getCities,removeCityFromDatabase} = useContext(CitiesContext);\r\n\r\n    const toggleModalEvent = () =>  toggleModal((prevState) => !prevState);\r\n    const reloadWeatherData = () => setLastUpdateDate(new Date());\r\n\r\n    return (<div key={lastUpdateDate}>\r\n        {isModalVisible &&\r\n            <Modal toggleModal={toggleModalEvent}>\r\n                <NewCityForm toggleModal={toggleModalEvent}/>\r\n            </Modal>\r\n        }\r\n        <Header reloadComponent={reloadWeatherData}/>\r\n        {getCities().map((city) => {\r\n            return <CityWeatherDisplay city={city}\r\n             key={city.id} citiesActions={{removeCityFromDatabase}}/>\r\n        })}\r\n        <Fab onClick={() => toggleModal((prevState) => !prevState)} />\r\n    </div>);\r\n}\r\n\r\nexport default WeatherPage;","import React from 'react';\r\nimport { LoaderProvider } from './context/LoaderContext';\r\nimport { CitiesProvider } from './context/CitiesContext';\r\nimport WeatherPage from './page/WeatherPage';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledAppContainer = styled.div`\r\n  min-height: 100vh;\r\n  background-color: #f0efeb;\r\n`\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <StyledAppContainer>\r\n      <LoaderProvider>\r\n        <CitiesProvider>\r\n          <WeatherPage />\r\n        </CitiesProvider>\r\n      </LoaderProvider>\r\n    </StyledAppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}